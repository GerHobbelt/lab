#!/usr/bin/env node

var converter = require("../src/helpers/md2d/mw-batch-converter"),
  nConverted,
  argv = require("optimist").boolean(["a", "v"]).argv;

/**
 Examples:

 ./node-bin/convert-mml-files

 Convert all mml files in imports/legacy-mw-content that are newer than json files in
 imports/legacy-mw-content/converted

 ./node-bin/convert-mml-files -a

 Convert all mml files in imports/legacy-mw-content generating json files in
 imports/legacy-mw-content/converted

 ./node-bin/convert-mml-files --path=imports/legacy-mw-content/conversion-and-physics-examples/

 Convert all mml files in imports/legacy-mw-content/conversion-and-physics-examples/ that
 are newer than json files in imports/legacy-mw-content/converted/conversion-and-physics-examples/

 ./node-bin/convert-mml-files --path=imports/legacy-mw-content/conversion-and-physics-examples/ -v

 Convert all mml files in imports/legacy-mw-content/conversion-and-physics-examples/ that
 are newer than json files in imports/legacy-mw-content/converted/conversion-and-physics-examples/
 and display input mml and output json file paths for each conversion.

 */

if (argv.path) {
  process.stdout.write("converting " + (argv.a ? "all " : "updated ") + "MML files in: " + argv.path + " ... ");
  nConverted = converter.convertMMLFolder(!argv.a, true, argv.path, argv.v);
} else {
  process.stdout.write("converting " + (argv.a ? "all " : "updated ") + "MML files ... ");
  nConverted = converter.convertMMLFolder(!argv.a, true, null, argv.v);
}
process.stdout.write("converted " + nConverted + " MML files.\n");
